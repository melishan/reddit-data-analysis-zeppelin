{"paragraphs":[{"text":"%pyspark\nimport pyspark\nfrom pyspark import SQLContext, SparkConf, SparkContext\nfrom pyspark.sql import SparkSession, Row, functions,types\nfrom pyspark.sql.functions import *\nfrom pyspark.sql.types import *\nfrom pyspark.sql import SQLContext\nimport nltk\nfrom nltk.corpus import stopwords\nimport string\n\n","user":"anonymous","dateUpdated":"2020-03-04T12:52:01+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 7: import nltk\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-7601722890614456684.py\", line 375, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 7, in <module>\n  File \"/usr/local/lib/python2.7/site-packages/nltk/__init__.py\", line 134, in <module>\n    from nltk.text import *\n  File \"/usr/local/lib/python2.7/site-packages/nltk/text.py\", line 26, in <module>\n    from nltk.lm import MLE\n  File \"/usr/local/lib/python2.7/site-packages/nltk/lm/__init__.py\", line 222, in <module>\n    from nltk.lm.models import (\n  File \"/usr/local/lib/python2.7/site-packages/nltk/lm/models.py\", line 11, in <module>\n    from nltk import compat\nImportError: cannot import name compat\n"}]},"apps":[],"jobName":"paragraph_1583323356471_-1532183224","id":"20200303-104024_839658375","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:52:01+0000","dateFinished":"2020-03-04T12:52:01+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:172"},{"text":"%pyspark\n#import boto3 #to connect s3 bucket it is installed boto3\nimport json #to convert our dataset to json it is used json ","user":"anonymous","dateUpdated":"2020-03-04T12:06:31+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356475_-734729786","id":"20200303-104034_1400060551","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:06:31+0000","dateFinished":"2020-03-04T12:06:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"text":"%pyspark\n# Read default configuration to modify it according to your data and cluster\nsc.getConf().getAll()","user":"anonymous","dateUpdated":"2020-03-04T12:06:26+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'spark.eventLog.enabled', u'true'), (u'master', u'yarn-client'), (u'spark.executor.memory', u'9486M'), (u'zeppelin.spark.concurrentSQL', u'false'), (u'spark.yarn.executor.memoryOverheadFactor', u'0.1875'), (u'zeppelin.pyspark.useIPython', u'true'), (u'spark.driver.extraLibraryPath', u'/usr/lib/hadoop/lib/native:/usr/lib/hadoop-lzo/lib/native'), (u'spark.driver.extraJavaOptions', u' -Dfile.encoding=UTF-8 -Dlog4j.configuration=file:///etc/zeppelin/conf/log4j.properties -Dzeppelin.log.file=/var/log/zeppelin/zeppelin-interpreter-spark-zeppelin-ip-172-31-16-129.log'), (u'spark.sql.parquet.output.committer.class', u'com.amazon.emr.committer.EmrOptimizedSparkSqlParquetOutputCommitter'), (u'spark.driver.appUIAddress', u'http://ip-172-31-16-129.eu-central-1.compute.internal:4040'), (u'spark.blacklist.decommissioning.timeout', u'1h'), (u'zeppelin.spark.useNew', u'true'), (u'spark.yarn.appMasterEnv.SPARK_PUBLIC_DNS', u'$(hostname -f)'), (u'spark.org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter.param.PROXY_URI_BASES', u'http://ip-172-31-16-129.eu-central-1.compute.internal:20888/proxy/application_1583323228834_0001'), (u'spark.sql.emr.internal.extensions', u'com.amazonaws.emr.spark.EmrSparkSessionExtensions'), (u'spark.executor.extraJavaOptions', u\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:MaxHeapFreeRatio=70 -XX:+CMSClassUnloadingEnabled -XX:OnOutOfMemoryError='kill -9 %p'\"), (u'spark.app.id', u'application_1583323228834_0001'), (u'spark.eventLog.dir', u'hdfs:///var/log/spark/apps'), (u'spark.useHiveContext', u'true'), (u'spark.sql.warehouse.dir', u'hdfs:///user/spark/warehouse'), (u'spark.ui.proxyBase', u'/proxy/application_1583323228834_0001'), (u'spark.history.fs.logDirectory', u'hdfs:///var/log/spark/apps'), (u'spark.ui.filters', u'org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter'), (u'zeppelin.dep.localrepo', u'/usr/lib/zeppelin/local-repo'), (u'spark.home', u'/usr/lib/spark'), (u'spark.hadoop.yarn.timeline-service.enabled', u'false'), (u'zeppelin.spark.printREPLOutput', u'true'), (u'zeppelin.spark.enableSupportedVersionCheck', u'true'), (u'zeppelin.spark.maxResult', u'1000'), (u'spark.executor.id', u'driver'), (u'zeppelin.interpreter.localRepo', u'/usr/lib/zeppelin/local-repo/spark'), (u'spark.org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter.param.PROXY_HOSTS', u'ip-172-31-16-129.eu-central-1.compute.internal'), (u'zeppelin.R.image.width', u'100%'), (u'spark.driver.memory', u'2048M'), (u'zeppelin.spark.ui.hidden', u'false'), (u'spark.decommissioning.timeout.threshold', u'20'), (u'spark.sql.catalogImplementation', u'hive'), (u'spark.stage.attempt.ignoreOnDecommissionFetchFailure', u'true'), (u'spark.executor.extraLibraryPath', u'/usr/lib/hadoop/lib/native:/usr/lib/hadoop-lzo/lib/native'), (u'spark.jars', u'file:/usr/lib/zeppelin/interpreter/spark/spark-interpreter-0.8.2.jar'), (u'zeppelin.spark.sql.interpolation', u'false'), (u'spark.hadoop.fs.s3.getObject.initialSocketTimeoutMilliseconds', u'2000'), (u'spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version.emr_internal_use_only.EmrFileSystem', u'2'), (u'spark.driver.port', u'36551'), (u'spark.driver.extraClassPath', u':/usr/lib/zeppelin/interpreter/spark/*:/usr/lib/zeppelin/lib/interpreter/*::/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/usr/lib/zeppelin/interpreter/spark/spark-interpreter-0.8.2.jar:/etc/hadoop/conf'), (u'zeppelin.R.cmd', u'R'), (u'zeppelin.spark.importImplicit', u'true'), (u'spark.executor.cores', u'4'), (u'zeppelin.interpreter.output.limit', u'102400'), (u'spark.yarn.dist.archives', u'file:/usr/lib/spark/R/lib/sparkr.zip#sparkr'), (u'spark.repl.class.uri', u'spark://ip-172-31-16-129.eu-central-1.compute.internal:36551/classes'), (u'spark.executorEnv.PYTHONPATH', u'/usr/lib/spark/python/lib/py4j-src.zip:/usr/lib/spark/python/:<CPS>{{PWD}}/pyspark.zip<CPS>{{PWD}}/py4j-src.zip<CPS>/usr/lib/spark/python/lib/py4j-0.10.7-src.zip:/usr/lib/spark/python/:<CPS>{{PWD}}/pyspark.zip<CPS>{{PWD}}/py4j-0.10.7-src.zip'), (u'spark.sql.hive.metastore.sharedPrefixes', u'com.amazonaws.services.dynamodbv2'), (u'spark.submit.deployMode', u'client'), (u'zeppelin.R.knitr', u'true'), (u'spark.sql.parquet.fs.optimized.committer.optimization-enabled', u'true'), (u'spark.yarn.historyServer.address', u'ip-172-31-16-129.eu-central-1.compute.internal:18080'), (u'zeppelin.spark.useHiveContext', u'true'), (u'spark.driver.host', u'ip-172-31-16-129.eu-central-1.compute.internal'), (u'spark.hadoop.mapreduce.fileoutputcommitter.cleanup-failures.ignored.emr_internal_use_only.EmrFileSystem', u'true'), (u'spark.history.ui.port', u'18080'), (u'spark.shuffle.service.enabled', u'true'), (u'zeppelin.pyspark.python', u'python'), (u'spark.resourceManager.cleanupExpiredHost', u'true'), (u'spark.executor.extraClassPath', u'/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/goodies/lib/emr-spark-goodies.jar:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/usr/share/aws/emr/s3select/lib/emr-s3-select-spark-connector.jar'), (u'zeppelin.R.render.options', u\"out.format = 'html', comment = NA, echo = FALSE, results = 'asis', message = F, warning = F, fig.retina = 2\"), (u'spark.files.fetchFailure.unRegisterOutputOnHost', u'true'), (u'zeppelin.spark.sql.stacktrace', u'false'), (u'spark.master', u'yarn'), (u'spark.app.name', u'Zeppelin'), (u'spark.dynamicAllocation.enabled', u'true'), (u'zeppelin.dep.additionalRemoteRepository', u'spark-packages,http://dl.bintray.com/spark-packages/maven,false;'), (u'spark.repl.class.outputDir', u'/tmp/spark1124698573884849159'), (u'spark.yarn.isPython', u'true'), (u'zeppelin.interpreter.max.poolsize', u'10'), (u'spark.blacklist.decommissioning.enabled', u'true')]\n"}]},"apps":[],"jobName":"paragraph_1583323356475_-2090081594","id":"20200303-104438_1531766826","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:06:26+0000","dateFinished":"2020-03-04T12:06:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"text":"%pyspark\n# Configure Spark, Build Session, Create SQL Context\n\nconf = SparkConf().setMaster(\"yarn\").setAppName(\"toucans\")\nsc = SparkSession.builder.config(conf=conf) \\\n.config(\"spark.driver.cores\", 1)\\\n.config(\"spark.executor.cores\", 2)\\\n.config(\"spark.memory.fraction\", 0.7)\\\n.config(\"spark.memory.storageFraction\", 0.1)\\\n.config(\"spark.executor.memory\", \"2g\")\\\n.config(\"spark.driver.memory\", \"2g\")\\\n.config(\"spark.driver.memoryOverhead\", \"2048\")\\\n.config(\"spark.executor.instances\", 3)\\\n.config(\"spark.memory.offHeap.enabled\", False)\\\n.config(\"spark.memory.offHeap.size\",\"4096\").getOrCreate().sparkContext\n\nsqlContext = SQLContext(sc)","user":"anonymous","dateUpdated":"2020-03-04T12:06:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356475_-2022441852","id":"20200303-104456_1834399220","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:06:34+0000","dateFinished":"2020-03-04T12:06:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"text":"%pyspark\n#Configure sc to be able to read from S3\nsc.setSystemProperty(\"com.amazonaws.services.s3.enableV4\", \"true\")\nhadoopConf = sc._jsc.hadoopConfiguration()","user":"anonymous","dateUpdated":"2020-03-04T12:06:39+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356476_-2071803144","id":"20200303-104559_1451542515","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:06:39+0000","dateFinished":"2020-03-04T12:06:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"%pyspark\n#ACCESS_KEY='FltB9z8r5D7wBwOHTDVYIRAYjrDcDrLH2rjRS/z6'\n#ACCESS_ID='AKIA2INXEDDHEIGH4MRA'\n\n#s3 = boto3.resource('s3', aws_access_key_id=ACCESS_ID, aws_secret_access_key= ACCESS_KEY) #to reach and pull data from s3 bucket we set configurations.\n#print(s3)\n\n#obj = s3.Object('toucanbuckets', 'path/to/sample10000')\n#print(obj)\n\n#ata = obj.get()['Body'].read().decode('utf-8') \nlines = sc.textFile(\"s3://toucanbuckets/path/to/sample10000\")\n#json_content = json.loads(body)\nprint(type(lines)) #atatype return as unicode to see key and values it is required to convert it to json format.","user":"anonymous","dateUpdated":"2020-03-04T12:06:41+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.rdd.RDD'>\n"}]},"apps":[],"jobName":"paragraph_1583323356476_-321936687","id":"20200303-104648_810130261","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:06:41+0000","dateFinished":"2020-03-04T12:06:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"text":"%pyspark\n#popularSubReddit: returns all subreddits in our dataset\n#findScore: returns all subreddits in our dataset\n#AskReddit: take only comments of Subreddit named AskReddit\n#authorScores: returns authors and their scores\n#getTitles: returns permalink and its comments\n#Splitted: it is used to distinguish titles from permalinks.","user":"anonymous","dateUpdated":"2020-03-04T13:09:27+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356476_1267605122","id":"20200304-104201_1943924174","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:178"},{"text":"%pyspark\ndef toJson(line):\n    if line != '':\n        t = json.loads(line)\n        return t\n        \ndef popularSubReddit(d1):\n    if d1 != None:\n        if 'subreddit' in d1.keys():\n                subreddit = d1 ['subreddit']\n    return (subreddit)\n    \ndef findScore(d1):\n    if d1 != None:\n        subreddit = d1['subreddit']\n        score = d1['score']\n        return (subreddit,score)\n        \ndef AskReddit(d1):\n    if d1 != None:\n        if d1['subreddit'] == 'AskReddit':\n            return (d1['body'])\n\ndef authorScores(d1):\n    if d1 != None:\n        author = d1['author']\n        score = d1['score']\n        return (author, score)\n        \ndef getTitles(d1):\n    if d1 != None:\n        title = d1['permalink']\n        comment = d1['body']\n        return (title, comment)\ndef Splitted(line):\n    if line !='':\n        t = line.split(\"/\")\n        return t[5]\n        \ndef toFields(line):\n    #print(line[0][0])\n    return Row(subreddit=str(line['subreddit'].encode(\"utf-8\")),score=int(line['score']))\n","user":"anonymous","dateUpdated":"2020-03-04T13:35:30+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356477_-1243353397","id":"20200303-104948_1822727203","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T13:35:30+0000","dateFinished":"2020-03-04T13:35:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179"},{"text":"%pyspark\n#lines = parseLine(data) #it is used custom function that we created to separate lines from each other.","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356477_-1092002724","id":"20200303-105051_1016350928","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:180"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356477_2095987901","id":"20200304-103655_1442760185","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"%pyspark\n#check if the result is correct\nlines.take(1) ","user":"anonymous","dateUpdated":"2020-03-04T12:07:07+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'{\"all_awardings\":[],\"associated_award\":null,\"author\":\"Tokutememo\",\"author_created_utc\":1430651464,\"author_flair_background_color\":null,\"author_flair_css_class\":null,\"author_flair_richtext\":[{\"a\":\":shazam:\",\"e\":\"emoji\",\"u\":\"https:\\\\/\\\\/emoji.redditmedia.com\\\\/0pafh6yz46k21_t5_324pd\\\\/shazam\"}],\"author_flair_template_id\":\"a399ec24-4423-11e9-96f6-0e28fc809556\",\"author_flair_text\":\":shazam:\",\"author_flair_text_color\":\"dark\",\"author_flair_type\":\"richtext\",\"author_fullname\":\"t2_n9ffa\",\"author_patreon_flair\":false,\"author_premium\":false,\"awarders\":[],\"body\":\"It really depends on the units you have and are trying to build. Speed teams usually benefit mostly from statheavy sets like Fatal, Rage, Swift, Blade and perhaps Focus. However the utility of Shield sets in NB10 can\\'t go unmentioned and Vio runes are also very useful on units like the Twins, who have been dominating the speed teams in Cairos for a while now.\\\\n\\\\nI\\'d say, farm whatever goes the fastest and the safest, and once your rune quality from that source improves, you\\'ll have an easier time transitioning into other content.\\\\n\\\\nFarming does take long. Really long time. You\\'re farming. Always. If it gets to you, try making some fusions, compete in Arena a little or anything else that strikes your fancy. Play around with new teams in dungeons for fun. Spice things up! ;)\",\"can_gild\":true,\"can_mod_post\":false,\"collapsed\":false,\"collapsed_because_crowd_control\":null,\"collapsed_reason\":null,\"controversiality\":0,\"created_utc\":1567295824,\"distinguished\":null,\"edited\":false,\"gilded\":0,\"gildings\":{},\"id\":\"eypc20y\",\"is_submitter\":false,\"link_id\":\"t3_cxt0lz\",\"locked\":false,\"no_follow\":true,\"parent_id\":\"t1_eypb8rk\",\"permalink\":\"\\\\/r\\\\/summonerswar\\\\/comments\\\\/cxt0lz\\\\/daily_advice_thread_31082019\\\\/eypc20y\\\\/\",\"quarantined\":false,\"removal_reason\":null,\"retrieved_on\":1575902093,\"score\":1,\"send_replies\":true,\"steward_reports\":[],\"stickied\":false,\"subreddit\":\"summonerswar\",\"subreddit_id\":\"t5_324pd\",\"subreddit_name_prefixed\":\"r\\\\/summonerswar\",\"subreddit_type\":\"public\",\"total_awards_received\":0}']\n"}]},"apps":[],"jobName":"paragraph_1583323356477_621081298","id":"20200303-105131_531156938","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:07:07+0000","dateFinished":"2020-03-04T12:07:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"text":"%pyspark\n#since the dataset return as string it has been created a function to get it as json","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356478_-1301249995","id":"20200304-103857_555873332","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"text":"%pyspark\n\nrdd = lines.map(lambda x: toJson(x))","user":"anonymous","dateUpdated":"2020-03-04T12:07:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356478_212493910","id":"20200303-105147_1873751220","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:07:23+0000","dateFinished":"2020-03-04T12:07:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"text":"%pyspark\nrdd.take(1)","user":"anonymous","dateUpdated":"2020-03-04T12:07:26+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[{u'subreddit_id': u't5_324pd', u'subreddit_name_prefixed': u'r/summonerswar', u'edited': False, u'author_created_utc': 1430651464, u'author_flair_type': u'richtext', u'removal_reason': None, u'link_id': u't3_cxt0lz', u'author_flair_template_id': u'a399ec24-4423-11e9-96f6-0e28fc809556', u'author_fullname': u't2_n9ffa', u'id': u'eypc20y', u'gilded': 0, u'collapsed_reason': None, u'no_follow': True, u'author': u'Tokutememo', u'can_mod_post': False, u'send_replies': True, u'parent_id': u't1_eypb8rk', u'score': 1, u'retrieved_on': 1575902093, u'author_premium': False, u'controversiality': 0, u'body': u\"It really depends on the units you have and are trying to build. Speed teams usually benefit mostly from statheavy sets like Fatal, Rage, Swift, Blade and perhaps Focus. However the utility of Shield sets in NB10 can't go unmentioned and Vio runes are also very useful on units like the Twins, who have been dominating the speed teams in Cairos for a while now.\\n\\nI'd say, farm whatever goes the fastest and the safest, and once your rune quality from that source improves, you'll have an easier time transitioning into other content.\\n\\nFarming does take long. Really long time. You're farming. Always. If it gets to you, try making some fusions, compete in Arena a little or anything else that strikes your fancy. Play around with new teams in dungeons for fun. Spice things up! ;)\", u'awarders': [], u'author_flair_css_class': None, u'steward_reports': [], u'author_patreon_flair': False, u'collapsed': False, u'author_flair_richtext': [{u'a': u':shazam:', u'e': u'emoji', u'u': u'https://emoji.redditmedia.com/0pafh6yz46k21_t5_324pd/shazam'}], u'is_submitter': False, u'gildings': {}, u'associated_award': None, u'can_gild': True, u'quarantined': False, u'author_flair_text_color': u'dark', u'permalink': u'/r/summonerswar/comments/cxt0lz/daily_advice_thread_31082019/eypc20y/', u'locked': False, u'stickied': False, u'total_awards_received': 0, u'subreddit': u'summonerswar', u'author_flair_text': u':shazam:', u'created_utc': 1567295824, u'all_awardings': [], u'author_flair_background_color': None, u'collapsed_because_crowd_control': None, u'subreddit_type': u'public', u'distinguished': None}]\n"}]},"apps":[],"jobName":"paragraph_1583323356478_811011141","id":"20200303-105333_756684640","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:07:26+0000","dateFinished":"2020-03-04T12:07:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"text":"%pyspark\n #it returns all subreddits in rdd\npopularsubreddit_RDD = rdd.map(lambda x: popularSubReddit(x))\n#since we create key:value pairs we can easily receive keys such as subreddits.\npopularsubreddit_RDD.take(3) ","user":"anonymous","dateUpdated":"2020-03-04T12:17:46+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'summonerswar', u'atheism', u'CFB']\n"}]},"apps":[],"jobName":"paragraph_1583323356479_-1345315448","id":"20200303-105341_1920645078","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:17:46+0000","dateFinished":"2020-03-04T12:17:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%pyspark\npopularsubreddit_RDD = popularsubreddit_RDD.map(lambda x: (x, 1)) \\\n.reduceByKey(lambda x,y: x+y) \\\n.sortBy(lambda x :x[1], ascending = False)\npopularsubreddit_RDD.take(2) ","user":"anonymous","dateUpdated":"2020-03-04T12:18:16+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'CFB', 432), (u'AskReddit', 430)]\n"}]},"apps":[],"jobName":"paragraph_1583323356479_-1363199208","id":"20200303-105509_1171939275","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:18:16+0000","dateFinished":"2020-03-04T12:18:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"%pyspark\ndf_fDist = popularsubreddit_RDD.toDF()\ndf_fDist.head() #it is created a df from rdd to use Spark SQL\n","user":"anonymous","dateUpdated":"2020-03-04T12:19:49+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(_1=u'CFB', _2=432)\n"}]},"apps":[],"jobName":"paragraph_1583323356479_868347321","id":"20200303-111952_2086533177","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:18:51+0000","dateFinished":"2020-03-04T12:18:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"%pyspark\ndf_fDist.createOrReplaceTempView(\"myTable\") \ndf2 = spark.sql(\"select _1 as Subreddit, _2 as Count from myTable limit 10\").show() \n#it is created a temp table using Spark SQL to display results","user":"anonymous","dateUpdated":"2020-03-04T12:19:06+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+-----+\n|    Subreddit|Count|\n+-------------+-----+\n|          CFB|  432|\n|    AskReddit|  430|\n|SquaredCircle|  237|\n|         news|  167|\n|    teenagers|  166|\n|        memes|  135|\n|        funny|   95|\n|     politics|   90|\n|          nfl|   74|\n|AmItheAsshole|   73|\n+-------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1583323356480_-915113990","id":"20200303-111825_1889557487","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:19:06+0000","dateFinished":"2020-03-04T12:19:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"%pyspark\nscore = rdd.map(findScore) #it has been created a function to obtain scores of each comment in subreddits.\nscore.take(5)\n","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'summonerswar', 1), (u'atheism', 1), (u'CFB', 6), (u'teenagers', -1), (u'RepLadies', 1)]\n"}]},"apps":[],"jobName":"paragraph_1583323356480_953216669","id":"20200303-105632_1990804004","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"%pyspark\n#it returns total scores of each subreddit by descending order\ntotalScore = score.mapValues(lambda x:(x,1)) \\\n.reduceByKey(lambda x,y: (x[0]+y[0],x[1]+y[1])) \\\n.sortBy(lambda x: x[1], ascending = False)\ntotalScore.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:11:08+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'AskReddit', (7027, 430)), (u'BikiniBottomTwitter', (6239, 3)), (u'nfl', (5697, 74))]\n"}]},"apps":[],"jobName":"paragraph_1583323356480_2062560904","id":"20200303-120627_2143681280","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"text":"%pyspark\navgScoreBySubreddit = totalScore.mapValues(lambda x : (x[0]/x[1])) \\\n.sortBy(lambda x: x[1], ascending = False)\navgScoreBySubreddit.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:11:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'BikiniBottomTwitter', 2079), (u'westworld', 430), (u'oddlysatisfying', 297)]\n"}]},"apps":[],"jobName":"paragraph_1583323356481_-593511009","id":"20200303-120920_126962648","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"text":"%pyspark\n#it is created a df from rdd to use Spark SQL\ndf_Scores = avgScoreBySubreddit.toDF(); df_Scores.head()","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(_1=u'BikiniBottomTwitter', _2=2079)\n"}]},"apps":[],"jobName":"paragraph_1583323356481_1155510060","id":"20200303-121205_1504285255","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"%pyspark\n#it is created a temp table using Spark SQL to display results\ndf_Scores.createOrReplaceTempView(\"myTable2\") \ndf2 = spark.sql(\"select _1 as Subreddit, _2 as avgScore from myTable2 limit 10\").show()\n","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"+-------------------+--------+\n|          Subreddit|avgScore|\n+-------------------+--------+\n|BikiniBottomTwitter|    2079|\n|          westworld|     430|\n|    oddlysatisfying|     297|\n|   specializedtools|     295|\n|             sports|     197|\n|             disney|     163|\n|    Anticonsumption|     117|\n|           Konosuba|     106|\n|     Showerthoughts|     100|\n|           TheOnion|      98|\n+-------------------+--------+\n\n"},{"type":"TEXT","data":"Fail to execute line 4: df4 = spark.sql(\"select _1 as Subreddit, _2 as avgScore from myTable2 where _2 < 0 limit 10 order by DESC\").show()\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-4357855204373812631.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 4, in <module>\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/session.py\", line 767, in sql\n    return DataFrame(self._jsparkSession.sql(sqlQuery), self._wrapped)\n  File \"/usr/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py\", line 1257, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 73, in deco\n    raise ParseException(s.split(': ', 1)[1], stackTrace)\nParseException: u\"\\nmismatched input 'order' expecting <EOF>(line 1, pos 75)\\n\\n== SQL ==\\nselect _1 as Subreddit, _2 as avgScore from myTable2 where _2 < 0 limit 10 order by DESC\\n---------------------------------------------------------------------------^^^\\n\"\n"}]},"apps":[],"jobName":"paragraph_1583323356481_1519715536","id":"20200303-121850_1291778756","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"%pyspark\nAskReddit_RDD = rdd.map(lambda x: AskReddit(x)); AskReddit_RDD.take(50)","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":219,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, u'Same, but right now there\\u2019s like nobody online', None, None, None, None, None, None, None, None, u\"You're both forgetting how quickly common sense goes out the window when tensions are running high. Not even a parent, and I can see how someone who's frantic would do that.\", None, None, None, None, None, None]\n"}]},"apps":[],"jobName":"paragraph_1583323356482_764591665","id":"20200303-122012_2133808343","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"%pyspark\n#Filter comments come as None with Filter","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356482_1037990180","id":"20200304-084543_513457540","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"%pyspark\nAskReddit_RDD = AskReddit_RDD.filter(lambda x: x!=None); AskReddit_RDD.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'Same, but right now there\\u2019s like nobody online', u\"You're both forgetting how quickly common sense goes out the window when tensions are running high. Not even a parent, and I can see how someone who's frantic would do that.\", u'If a 12 year old wants to spend their birthday with their best friend (you know some kids prefer to hang out with people one on one just like some adults)  it\\u2019s super weird for an internet stranger to step in  and say that\\u2019s unacceptable was my point']\n"}]},"apps":[],"jobName":"paragraph_1583323356482_1384086139","id":"20200304-083830_1027018528","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"%pyspark\n#Convert all the data into lowercase for easy processing.","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356483_-650587701","id":"20200304-084612_1365290993","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%pyspark\nAskReddit_RDD = AskReddit_RDD.map(lambda x: x.lower()); AskReddit_RDD.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'same, but right now there\\u2019s like nobody online', u\"you're both forgetting how quickly common sense goes out the window when tensions are running high. not even a parent, and i can see how someone who's frantic would do that.\", u'if a 12 year old wants to spend their birthday with their best friend (you know some kids prefer to hang out with people one on one just like some adults)  it\\u2019s super weird for an internet stranger to step in  and say that\\u2019s unacceptable was my point']\n"}]},"apps":[],"jobName":"paragraph_1583323356483_1281642949","id":"20200304-084051_274744471","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%pyspark\n#Split each sentence into words","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356483_-1915076652","id":"20200304-084328_315250345","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"%pyspark\nwords=AskReddit_RDD.map(lambda x: x.split(\" \")); words.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[[u'same,', u'but', u'right', u'now', u'there\\u2019s', u'like', u'nobody', u'online'], [u\"you're\", u'both', u'forgetting', u'how', u'quickly', u'common', u'sense', u'goes', u'out', u'the', u'window', u'when', u'tensions', u'are', u'running', u'high.', u'not', u'even', u'a', u'parent,', u'and', u'i', u'can', u'see', u'how', u'someone', u\"who's\", u'frantic', u'would', u'do', u'that.'], [u'if', u'a', u'12', u'year', u'old', u'wants', u'to', u'spend', u'their', u'birthday', u'with', u'their', u'best', u'friend', u'(you', u'know', u'some', u'kids', u'prefer', u'to', u'hang', u'out', u'with', u'people', u'one', u'on', u'one', u'just', u'like', u'some', u'adults)', u'', u'it\\u2019s', u'super', u'weird', u'for', u'an', u'internet', u'stranger', u'to', u'step', u'in', u'', u'and', u'say', u'that\\u2019s', u'unacceptable', u'was', u'my', u'point']]\n"}]},"apps":[],"jobName":"paragraph_1583323356483_1179392586","id":"20200304-090410_309902103","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"%pyspark\n#To move ahead first we will clean the data, we will remove stopwords and punctuations","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356484_-1834582186","id":"20200304-085636_1669832390","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"text":"%pyspark\nstop_words=set(stopwords.words('english')); print(stop_words)","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"set([u'all', u'just', u\"don't\", u'being', u'over', u'both', u'through', u'yourselves', u'its', u'before', u'o', u'don', u'hadn', u'herself', u'll', u'had', u'should', u'to', u'only', u'won', u'under', u'ours', u'has', u\"should've\", u\"haven't\", u'do', u'them', u'his', u'very', u\"you've\", u'they', u'not', u'during', u'now', u'him', u'nor', u\"wasn't\", u'd', u'did', u'didn', u'this', u'she', u'each', u'further', u\"won't\", u'where', u\"mustn't\", u\"isn't\", u'few', u'because', u\"you'd\", u'doing', u'some', u'hasn', u\"hasn't\", u'are', u'our', u'ourselves', u'out', u'what', u'for', u\"needn't\", u'below', u're', u'does', u\"shouldn't\", u'above', u'between', u'mustn', u't', u'be', u'we', u'who', u\"mightn't\", u\"doesn't\", u'were', u'here', u'shouldn', u'hers', u\"aren't\", u'by', u'on', u'about', u'couldn', u'of', u\"wouldn't\", u'against', u's', u'isn', u'or', u'own', u'into', u'yourself', u'down', u\"hadn't\", u'mightn', u\"couldn't\", u'wasn', u'your', u\"you're\", u'from', u'her', u'their', u'aren', u\"it's\", u'there', u'been', u'whom', u'too', u'wouldn', u'themselves', u'weren', u'was', u'until', u'more', u'himself', u'that', u\"didn't\", u'but', u\"that'll\", u'with', u'than', u'those', u'he', u'me', u'myself', u'ma', u\"weren't\", u'these', u'up', u'will', u'while', u'ain', u'can', u'theirs', u'my', u'and', u've', u'then', u'is', u'am', u'it', u'doesn', u'an', u'as', u'itself', u'at', u'have', u'in', u'any', u'if', u'again', u'no', u'when', u'same', u'how', u'other', u'which', u'you', u\"shan't\", u'shan', u'needn', u'haven', u'after', u'most', u'such', u'why', u'a', u'off', u'i', u'm', u'yours', u\"you'll\", u'so', u'y', u\"she's\", u'the', u'having', u'once'])\n"}]},"apps":[],"jobName":"paragraph_1583323356484_434668693","id":"20200304-090552_589293009","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"%pyspark\ndef removeStopWords(x):\n    filteredSentence = [w for w in x if not w in stop_words]\n    return filteredSentence\n","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356484_1725464349","id":"20200304-085716_965830188","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"%pyspark\nstopword_RDD = words.map(removeStopWords); stopword_RDD.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[[u'same,', u'right', u'there\\u2019s', u'like', u'nobody', u'online'], [u'forgetting', u'quickly', u'common', u'sense', u'goes', u'window', u'tensions', u'running', u'high.', u'even', u'parent,', u'see', u'someone', u\"who's\", u'frantic', u'would', u'that.'], [u'12', u'year', u'old', u'wants', u'spend', u'birthday', u'best', u'friend', u'(you', u'know', u'kids', u'prefer', u'hang', u'people', u'one', u'one', u'like', u'adults)', u'', u'it\\u2019s', u'super', u'weird', u'internet', u'stranger', u'step', u'', u'say', u'that\\u2019s', u'unacceptable', u'point']]\n"}]},"apps":[],"jobName":"paragraph_1583323356485_1295119119","id":"20200304-090723_576912783","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:205"},{"text":"%pyspark\ndef removePunctuations(x):\n    list_punct=list(string.punctuation)\n    filtered = [''.join(c for c in s if c not in list_punct) for s in x] \n    filtered_space = [s for s in filtered if s] #remove empty space \n    return filtered","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583323356485_144970008","id":"20200304-093422_992616442","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:206"},{"text":"%pyspark\nremovedpunct_RDD=stopword_RDD.flatMap(removePunctuations)\nremovedpunct_RDD.take(5), removedpunct_RDD.count()","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"([u'same', u'right', u'there\\u2019s', u'like', u'nobody'], 6662)\n"}]},"apps":[],"jobName":"paragraph_1583323356485_-664437108","id":"20200304-094050_1984406349","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:207"},{"text":"%pyspark\n#Counting the words","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356485_1120637064","id":"20200304-094543_957814850","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:208"},{"text":"%pyspark\nwordCounts=removedpunct_RDD.map(lambda x: (x, 1)) \\\n.reduceByKey(lambda x,y: x+y) \\\n.sortBy(lambda x: x[1], ascending = False);\nwordCounts.take(5)","user":"anonymous","dateUpdated":"2020-03-04T12:09:49+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('', 102), (u'like', 57), (u'one', 54), (u'would', 40), (u'know', 36)]\n"}]},"apps":[],"jobName":"paragraph_1583323356486_1711136783","id":"20200304-094124_24971490","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:209"},{"text":"%pyspark\n#A df is created from the wordCounts RDD to use Spark SQL","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356486_-345634383","id":"20200304-095812_2026894316","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:210"},{"text":"%pyspark\ndf_wordCounts = wordCounts.toDF(); df_wordCounts.head() \n","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(_1=u'', _2=102)\n"}]},"apps":[],"jobName":"paragraph_1583323356486_1959248565","id":"20200304-094637_209698864","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:211"},{"text":"%pyspark\n#It is created a temp table using Spark SQL to display results","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583323356486_-237220926","id":"20200304-100245_1158459669","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:212"},{"text":"%pyspark\ndf_wordCounts.createOrReplaceTempView(\"myTable3\") \ndf3 = spark.sql(\"select _1 as Word, _2 as Count from myTable3 where length(_1) > 0 limit 10\").show() \n","user":"anonymous","dateUpdated":"2020-03-04T12:02:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----+\n|     Word|Count|\n+---------+-----+\n|     like|   57|\n|      one|   54|\n|    would|   40|\n|     know|   36|\n|       it|   35|\n|     time|   35|\n|      get|   35|\n|       go|   27|\n|something|   26|\n|      use|   25|\n+---------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1583323356487_-737645179","id":"20200304-095728_1620429952","dateCreated":"2020-03-04T12:02:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:213"},{"text":"%pyspark\nauthorScores_RDD = rdd.map(lambda x: authorScores(x)) \\\n.sortBy(lambda x: x[1], ascending = True) \\\n.filter(lambda x: x[0]!= '[deleted]')\n\nauthorScores_RDD.take(3)","user":"anonymous","dateUpdated":"2020-03-04T12:08:55+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'ihaveSIGMA', -489), (u'jerryhill50', -99), (u'Flufflybutton', -53)]\n"}]},"apps":[],"jobName":"paragraph_1583323356487_309480818","id":"20200304-100410_1623814854","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:08:55+0000","dateFinished":"2020-03-04T12:09:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"text":"%pyspark\ndf_authorScores = authorScores_RDD.toDF()\ndf_authorScores.head()","user":"anonymous","dateUpdated":"2020-03-04T12:21:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(_1=u'ihaveSIGMA', _2=-489)\n"}]},"apps":[],"jobName":"paragraph_1583323356487_-699516297","id":"20200304-105234_1484824041","dateCreated":"2020-03-04T12:02:36+0000","dateStarted":"2020-03-04T12:21:32+0000","dateFinished":"2020-03-04T12:21:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:215"},{"text":"%pyspark\ndf_authorScores.createOrReplaceTempView(\"myTable4\") \ndf4 = spark.sql(\"select _1 as Author, _2 as Score from myTable4 where _2 < 0 limit 10\").show()","user":"anonymous","dateUpdated":"2020-03-04T12:22:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+-----+\n|             Author|Score|\n+-------------------+-----+\n|         ihaveSIGMA| -489|\n|        jerryhill50|  -99|\n|      Flufflybutton|  -53|\n|         Frazier206|  -38|\n|      VSPParabellum|  -35|\n|_ALPHA_12_YEAR_OLD_|  -35|\n|      justleftovers|  -32|\n|      LordKingThing|  -31|\n|         50kinjapan|  -28|\n|         DevonRoars|  -27|\n+-------------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1583324484784_328772927","id":"20200304-122124_442701635","dateCreated":"2020-03-04T12:21:24+0000","dateStarted":"2020-03-04T12:22:56+0000","dateFinished":"2020-03-04T12:23:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:216"},{"text":"%pyspark\n#getTitles function returns both permalink and its comments","user":"anonymous","dateUpdated":"2020-03-04T13:13:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583327559877_763717773","id":"20200304-131239_115404390","dateCreated":"2020-03-04T13:12:39+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:217"},{"text":"%pyspark\ngetTitles_RDD = rdd.map(lambda x: getTitles(x))\ngetTitles_RDD.take(1)","user":"anonymous","dateUpdated":"2020-03-04T13:22:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'/r/summonerswar/comments/cxt0lz/daily_advice_thread_31082019/eypc20y/', u\"It really depends on the units you have and are trying to build. Speed teams usually benefit mostly from statheavy sets like Fatal, Rage, Swift, Blade and perhaps Focus. However the utility of Shield sets in NB10 can't go unmentioned and Vio runes are also very useful on units like the Twins, who have been dominating the speed teams in Cairos for a while now.\\n\\nI'd say, farm whatever goes the fastest and the safest, and once your rune quality from that source improves, you'll have an easier time transitioning into other content.\\n\\nFarming does take long. Really long time. You're farming. Always. If it gets to you, try making some fusions, compete in Arena a little or anything else that strikes your fancy. Play around with new teams in dungeons for fun. Spice things up! ;)\")]\n"}]},"apps":[],"jobName":"paragraph_1583324568404_646404104","id":"20200304-122248_40383976","dateCreated":"2020-03-04T12:22:48+0000","dateStarted":"2020-03-04T13:22:57+0000","dateFinished":"2020-03-04T13:22:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:218"},{"text":"%pyspark\n#The titles which posted by Redditors.\n#Titles has been extracted from permalinks using Splitted function.","user":"anonymous","dateUpdated":"2020-03-04T13:24:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583327265678_-570329388","id":"20200304-130745_691038507","dateCreated":"2020-03-04T13:07:45+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:219"},{"text":"%pyspark\ngetTitles_RDD2 = getTitles_RDD.map(lambda x: Splitted(x[0]))\ngetTitles_RDD2.take(3)","user":"anonymous","dateUpdated":"2020-03-04T13:17:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'daily_advice_thread_31082019', u'large_scale_societies_seem_to_be_a_religious', u'game_thread_auburn_vs_oregon_730pm_et']\n"}]},"apps":[],"jobName":"paragraph_1583325703619_-1897390550","id":"20200304-124143_1275519408","dateCreated":"2020-03-04T12:41:43+0000","dateStarted":"2020-03-04T13:17:38+0000","dateFinished":"2020-03-04T13:17:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:220"},{"text":"%pyspark\ngetTitles_RDD2 = getTitles_RDD2.map(lambda x: (x,1)) \\\n.reduceByKey(lambda x,y: x+y) \\\n.sortBy(lambda x: x[1], ascending = False)\n","user":"anonymous","dateUpdated":"2020-03-04T13:21:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583326768342_-1635229831","id":"20200304-125928_1768688756","dateCreated":"2020-03-04T12:59:28+0000","dateStarted":"2020-03-04T13:21:23+0000","dateFinished":"2020-03-04T13:21:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:221"},{"text":"%pyspark\ndf_getTitles_RDD2 = getTitles_RDD2.toDF()\ndf_getTitles_RDD2.head()\n","user":"anonymous","dateUpdated":"2020-03-04T13:21:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(_1=u'live_aew_all_out_2019_discussion_thread', _2=155)\n"}]},"apps":[],"jobName":"paragraph_1583327803121_1124268856","id":"20200304-131643_1809301444","dateCreated":"2020-03-04T13:16:43+0000","dateStarted":"2020-03-04T13:20:19+0000","dateFinished":"2020-03-04T13:20:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:222"},{"text":"%pyspark\ndf_getTitles_RDD2.createOrReplaceTempView(\"myTable5\") \ndf4 = spark.sql(\"select _1 as Title, _2 as Count from myTable5 limit 10\").show()","user":"anonymous","dateUpdated":"2020-03-04T13:35:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----+\n|               Title|Count|\n+--------------------+-----+\n|live_aew_all_out_...|  155|\n|game_thread_aubur...|  147|\n|active_shooter_ne...|  128|\n|game_thread_middl...|  103|\n|game_thread_white...|   74|\n|pre_aew_all_out_2...|   39|\n|big_brother_us21_...|   38|\n|us_open_discussio...|   37|\n|this_60yearold_ed...|   25|\n|match_thread_phil...|   25|\n+--------------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1583327848391_-1614907215","id":"20200304-131728_887158085","dateCreated":"2020-03-04T13:17:28+0000","dateStarted":"2020-03-04T13:35:04+0000","dateFinished":"2020-03-04T13:35:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:223"},{"text":"%pyspark\nscore2 = rdd.map(toFields)","user":"anonymous","dateUpdated":"2020-03-04T13:39:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583328101875_258105226","id":"20200304-132141_190821610","dateCreated":"2020-03-04T13:21:41+0000","dateStarted":"2020-03-04T13:39:39+0000","dateFinished":"2020-03-04T13:39:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:224"},{"text":"%pyspark\nschemaScore = spark.createDataFrame(score2).cache()\nschemaScore.createOrReplaceTempView(\"score\")","user":"anonymous","dateUpdated":"2020-03-04T13:39:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1583329179680_1999658397","id":"20200304-133939_622953038","dateCreated":"2020-03-04T13:39:39+0000","dateStarted":"2020-03-04T13:39:57+0000","dateFinished":"2020-03-04T13:40:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:225"},{"text":"%pyspark\n# SQL can be run over DataFrames\nnegatives = spark.sql(\"SELECT * FROM score WHERE score<0 limit 10\")\n\nfor neg in negatives.collect():\n  print(neg)","user":"anonymous","dateUpdated":"2020-03-04T13:44:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(score=-1, subreddit=u'teenagers')\nRow(score=-24, subreddit=u'askcarsales')\nRow(score=-15, subreddit=u'news')\nRow(score=-2, subreddit=u'mila_azul')\nRow(score=-2, subreddit=u'politics')\nRow(score=-3, subreddit=u'GearsOfWar')\nRow(score=-4, subreddit=u'australia')\nRow(score=-5, subreddit=u'AskReddit')\nRow(score=-4, subreddit=u'news')\nRow(score=-5, subreddit=u'GlobalOffensive')\n"}]},"apps":[],"jobName":"paragraph_1583329189579_-713057533","id":"20200304-133949_187423259","dateCreated":"2020-03-04T13:39:49+0000","dateStarted":"2020-03-04T13:40:44+0000","dateFinished":"2020-03-04T13:40:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:226"},{"text":"%pyspark\n#Functions are used instead of Spark SQL queries\nschemaScore.groupBy(\"subreddit\").count().orderBy(\"subreddit\").show()\n\nspark.stop()","user":"anonymous","dateUpdated":"2020-03-04T13:43:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+-----+\n|     subreddit|count|\n+--------------+-----+\n|  13ReasonsWhy|    7|\n|         18_19|    1|\n|        1arbez|    4|\n|     2007scape|   12|\n|       23andme|    1|\n|         240sx|    1|\n| 24hoursupport|    1|\n|          2b2t|    2|\n|   2busty2hide|    2|\n|  2meirl4meirl|    5|\n| 40kOrkScience|    1|\n|40plusGoneWild|    1|\n|           420|    1|\n|         49ers|    4|\n|  4PanelCringe|    1|\n|       4Runner|    1|\n|         4chan|    3|\n|          4kTV|    2|\n|           4x4|    1|\n|       6thForm|    2|\n+--------------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1583329231568_-1879716022","id":"20200304-134031_844811249","dateCreated":"2020-03-04T13:40:31+0000","dateStarted":"2020-03-04T13:43:04+0000","dateFinished":"2020-03-04T13:43:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:227"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-03-04T13:43:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1583329383986_90375183","id":"20200304-134303_1742883269","dateCreated":"2020-03-04T13:43:03+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:228"}],"name":"toucans","id":"2F237KPDN","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}